#!/usr/bin/env php
<?php

declare(strict_types=1);

namespace phpDocumentor\Guides;

use phpDocumentor\Guides\Cli\Application;
use phpDocumentor\Guides\DependencyInjection\Compiler\NodeRendererPass;
use Symfony\Component\DependencyInjection\ContainerBuilder;

$autoloadDirectory = dirname(__DIR__) . '/../../vendor/autoload.php';
if (file_exists($autoloadDirectory)){
    require_once dirname(__DIR__) . '/../../vendor/autoload.php';
} else {
    // Search for autoload.php
    if (($rootPath = getcwd()) === false) {
        throw new \RuntimeException("Error while determining the current directory.", 1636451407);
    }

    $dir = __DIR__ . '/vendor';
    while (!file_exists($dir . '/autoload.php')) {
        if ($dir === $rootPath) {
            throw new \RuntimeException("Could not find autoload.php", 1636451408);
        }
        $dir = \dirname($dir);
    }
    require $dir . '/autoload.php';
}

$container = new ContainerBuilder();

// Load manual parameters
$container->setParameter('vendor_dir', dirname(__DIR__, 3) . '/vendor');
$container->setParameter('working_directory', rtrim(getcwd(), '/'));

// Load container configuration
foreach (Application::getDefaultExtensions() as $extension) {
    $container->registerExtension($extension);
    $container->loadFromExtension($extension->getAlias());
}

$container->addCompilerPass(new NodeRendererPass());

// Compile container
$container->compile(true);

exit($container->get(Application::class)->run());
